from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
import time

# ƒê∆∞·ªùng d·∫´n t·ªõi ChromeDriver 
chrome_driver_path = "C:\\Program Files (x86)\\Web Drivers\\chrome\\chromedriver.exe"

# Kh·ªüi t·∫°o tr√¨nh duy·ªát Chrome
options = webdriver.ChromeOptions()
# options.add_argument("--headless")  # Ch·∫°y ·∫©n n·∫øu kh√¥ng mu·ªën m·ªü c·ª≠a s·ªï tr√¨nh duy·ªát
options.add_argument("--disable-gpu")
service = Service(chrome_driver_path)
driver = webdriver.Chrome(service=service, options=options)

# Truy c·∫≠p FireAnt
url = "https://fireant.vn/cong-dong/moi-nhat"
driver.get(url)

# ƒê·ª£i pop-up xu·∫•t hi·ªán v√† ƒë√≥ng n√≥
try:
    wait = WebDriverWait(driver, 1)
    close_popup_button = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'ƒê·ªÉ sau')]"))
    )
    close_popup_button.click()
    print("‚úÖ ƒê√£ ƒë√≥ng pop-up.")
except Exception as e:
    print("‚ö† Kh√¥ng t√¨m th·∫•y pop-up ho·∫∑c ƒë√£ t·ª± ƒë·ªông ƒë√≥ng.")

# M·ªü file ƒë·ªÉ l∆∞u b√¨nh lu·∫≠n
comment_set = set()
num_scrolls = 30

# Bi·∫øn ƒë·∫øm l·ªói
error_count = 0
stale_error_count = 0

with open("comments.txt", "w", encoding="utf-8") as f:
    for scroll in range(num_scrolls):
        time.sleep(0.1)

        # L·∫•y danh s√°ch b√¨nh lu·∫≠n hi·ªán t·∫°i
        comment_elements = driver.find_elements(By.CSS_SELECTOR, "div.overflow-x-hidden.leading-7")
        time_elements = driver.find_elements(By.CSS_SELECTOR, "div.flex.flex-row.items-center.line-clamp-1 time")

        # B·ªè b√¨nh lu·∫≠n ƒë·∫ßu ti√™n trong l·∫ßn ƒë·∫ßu ti√™n (th∆∞·ªùng l√† th√¥ng b√°o livestream)
        if scroll == 0 and comment_elements:
            comment_elements.pop(0)
            time_elements.pop(0)

        for i in range(min(len(comment_elements), len(time_elements))):
            try:
                # Click "Th√™m" n·∫øu c√≥
                more_btns = comment_elements[i].find_elements(By.CSS_SELECTOR, "a.font-semibold.cursor-pointer")
                if more_btns:
                    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", more_btns[0])
                    time.sleep(0.1)
                    driver.execute_script("arguments[0].click();", more_btns[0])
                    time.sleep(0.1)

                    # üîÑ Sau khi click, DOM thay ƒë·ªïi => ph·∫£i l·∫•y l·∫°i ph·∫ßn t·ª≠ comment
                    comment_elements_updated = driver.find_elements(By.CSS_SELECTOR, "div.overflow-x-hidden.leading-7")
                    time_elements_updated = driver.find_elements(By.CSS_SELECTOR, "div.flex.flex-row.items-center.line-clamp-1 time")

                    if i >= len(comment_elements_updated) or i >= len(time_elements_updated):
                        continue

                    comment_text = comment_elements_updated[i].text.strip()
                    comment_time = time_elements_updated[i].get_attribute("title")
                else:
                    # Kh√¥ng c√≥ n√∫t "Th√™m"
                    comment_text = comment_elements[i].text.strip()
                    comment_time = time_elements[i].get_attribute("title")

                if comment_text and (comment_text, comment_time) not in comment_set:
                    comment_set.add((comment_text, comment_time))
                    f.write(f"[{comment_time}] {comment_text}\n\n")

            except Exception as e:
                error_count += 1
                if "stale element reference" in str(e).lower():
                    stale_error_count += 1
                print(f"‚ö† L·ªói khi l·∫•y b√¨nh lu·∫≠n {i}: {e}")

        # Cu·ªôn xu·ªëng m·ªôt ƒëo·∫°n nh·ªè
        driver.execute_script("window.scrollBy(0, window.innerHeight);")

# In th·ªëng k√™ sau khi k·∫øt th√∫c
print(f"\n‚úÖ ƒê√£ ghi {len(comment_set)} b√¨nh lu·∫≠n v√†o file comments.txt")
print(f"‚ö† T·ªïng s·ªë l·ªói: {error_count}")
print(f"‚ö† Trong ƒë√≥ l·ªói stale element: {stale_error_count}")

# ƒê√≥ng tr√¨nh duy·ªát
driver.quit()





